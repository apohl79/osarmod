From f79b293c039366732070d806e064f0ac9e472031 Mon Sep 17 00:00:00 2001
From: Andreas Pohl <apohl79@gmail.com>
Date: Thu, 14 Jun 2012 15:51:13 +0200
Subject: [PATCH] Adding option to use/unuse the LED for notifications

This setting allows users to decide per account if a notification activates the LED or not.

Change-Id: I3f53b9ae1df8216c1510e9072b8f25ae8583e26c
---
 .../com/android/emailcommon/provider/Account.java  |    6 +++++-
 res/values-de/strings.xml                          |    1 +
 res/values-en-rGB/strings.xml                      |    1 +
 res/values/strings.xml                             |    1 +
 res/xml/account_settings_preferences.xml           |    7 +++++++
 src/com/android/email/NotificationController.java  |    3 ++-
 .../activity/setup/AccountSettingsFragment.java    |    9 ++++++++-
 7 files changed, 25 insertions(+), 3 deletions(-)

diff --git a/emailcommon/src/com/android/emailcommon/provider/Account.java b/emailcommon/src/com/android/emailcommon/provider/Account.java
index 94d858b..0bbfde0 100644
--- a/emailcommon/src/com/android/emailcommon/provider/Account.java
+++ b/emailcommon/src/com/android/emailcommon/provider/Account.java
@@ -100,6 +100,8 @@ public final class Account extends EmailContent implements AccountColumns, Parce
     // Whether or not server-side search supports global search (i.e. all mailboxes); only valid
     // if FLAGS_SUPPORTS_SEARCH is true
     public static final int FLAGS_SUPPORTS_GLOBAL_SEARCH = 1<<12;
+    // Defines if the user wants to enable the notification LED
+    public final static int FLAGS_NOTIFY_USE_LED = 1<<13;
 
     // Deletion policy (see FLAGS_DELETE_POLICY_MASK, above)
     public static final int DELETE_POLICY_NEVER = 0;
@@ -371,6 +373,7 @@ public final class Account extends EmailContent implements AccountColumns, Parce
     /**
      * @return the flags for this account
      * @see #FLAGS_NOTIFY_NEW_MAIL
+     * @see #FLAGS_NOTIFY_USE_LED
      * @see #FLAGS_VIBRATE_ALWAYS
      * @see #FLAGS_VIBRATE_WHEN_SILENT
      */
@@ -381,6 +384,7 @@ public final class Account extends EmailContent implements AccountColumns, Parce
     /**
      * Set the flags for this account
      * @see #FLAGS_NOTIFY_NEW_MAIL
+     * @see #FLAGS_NOTIFY_USE_LED
      * @see #FLAGS_VIBRATE_ALWAYS
      * @see #FLAGS_VIBRATE_WHEN_SILENT
      * @param newFlags the new value for the flags
@@ -998,4 +1002,4 @@ public final class Account extends EmailContent implements AccountColumns, Parce
         return sb.toString();
     }
 
-}
\ No newline at end of file
+}
diff --git a/res/values-de/strings.xml b/res/values-de/strings.xml
index ccbef57..e390adc 100644
--- a/res/values-de/strings.xml
+++ b/res/values-de/strings.xml
@@ -367,6 +367,7 @@
     <string name="account_settings_background_attachments_label" msgid="2980317599840958688">"Anhänge herunterladen"</string>
     <string name="account_settings_background_attachments_summary" msgid="5954218549226189376">"Anhänge neuer Nachrichten automatisch über WLAN herunterladen"</string>
     <string name="account_settings_notify_label" msgid="1630001017303007974">"E-Mail-Benachrichtigung"</string>
+    <string name="account_settings_notify_light_label" msgid="1630001017303007975">"Benachrichtigungs-LED verwenden"</string>
     <string name="account_settings_summary" msgid="8403582255413830007">"Synchronisierungshäufigkeit, Benachrichtigungen usw."</string>
     <string name="account_settings_notify_summary" msgid="6301122709602752038">"Bei E-Mail-Eingang Benachrichtigung in der Systemleiste"</string>
     <string name="account_settings_mail_check_frequency_label" msgid="8271462919214560616">"Häufigkeit des E-Mail-Abrufs"</string>
diff --git a/res/values-en-rGB/strings.xml b/res/values-en-rGB/strings.xml
index 7ba128b..601f9ac 100644
--- a/res/values-en-rGB/strings.xml
+++ b/res/values-en-rGB/strings.xml
@@ -364,6 +364,7 @@
     <string name="account_settings_background_attachments_label" msgid="2980317599840958688">"Download attachments"</string>
     <string name="account_settings_background_attachments_summary" msgid="5954218549226189376">"Auto-download attachments to recent messages via Wi-Fi"</string>
     <string name="account_settings_notify_label" msgid="1630001017303007974">"Email notifications"</string>
+    <string name="account_settings_notify_light_label" msgid="1630001017303007975">"Use notification LED"</string>
     <string name="account_settings_summary" msgid="8403582255413830007">"Sync frequency, notifications, etc."</string>
     <string name="account_settings_notify_summary" msgid="6301122709602752038">"Notify in System bar when emails arrive"</string>
     <string name="account_settings_mail_check_frequency_label" msgid="8271462919214560616">"Inbox check frequency"</string>
diff --git a/res/values/strings.xml b/res/values/strings.xml
index 16b3860..ce74d34 100644
--- a/res/values/strings.xml
+++ b/res/values/strings.xml
@@ -934,6 +934,7 @@ as <xliff:g id="filename">%s</xliff:g>.</string>
     <string name="account_settings_background_attachments_summary">
         Auto-download attachments to recent messages via Wi-Fi</string>
     <string name="account_settings_notify_label">Email notifications</string>
+    <string name="account_settings_notify_light_label">Use notification LED</string>
     <!-- On Settings screen, summary line when called via AccountManager for Exchange accounts
         [CHAR LIMIT=50] -->
     <string name="account_settings_summary">Sync frequency, notifications, etc.</string>
diff --git a/res/xml/account_settings_preferences.xml b/res/xml/account_settings_preferences.xml
index 7b6fa9b..e2ccbff 100644
--- a/res/xml/account_settings_preferences.xml
+++ b/res/xml/account_settings_preferences.xml
@@ -99,6 +99,13 @@
             android:defaultValue="true"
             android:summary="@string/account_settings_notify_summary" />
 
+        <CheckBoxPreference
+            android:key="account_notify_light"
+            android:layout="?android:attr/preferenceLayoutChild"
+            android:dependency="account_notify"
+            android:title="@string/account_settings_notify_light_label"
+            android:defaultValue="true" />
+
         <RingtonePreference
             android:key="account_ringtone"
             android:layout="?android:attr/preferenceLayoutChild"
diff --git a/src/com/android/email/NotificationController.java b/src/com/android/email/NotificationController.java
index 991f3ba..8a47ea7 100644
--- a/src/com/android/email/NotificationController.java
+++ b/src/com/android/email/NotificationController.java
@@ -484,8 +484,9 @@ public class NotificationController {
         final boolean vibrate = (flags & Account.FLAGS_VIBRATE_ALWAYS) != 0;
         final boolean vibrateWhenSilent = (flags & Account.FLAGS_VIBRATE_WHEN_SILENT) != 0;
         final boolean isRingerSilent = getRingerMode() != AudioManager.RINGER_MODE_NORMAL;
+        final boolean led = (flags & Account.FLAGS_NOTIFY_USE_LED) != 0;
 
-        int defaults = Notification.DEFAULT_LIGHTS;
+        int defaults = led ? Notification.DEFAULT_LIGHTS : 0;
         if (vibrate || (vibrateWhenSilent && isRingerSilent)) {
             defaults |= Notification.DEFAULT_VIBRATE;
         }
diff --git a/src/com/android/email/activity/setup/AccountSettingsFragment.java b/src/com/android/email/activity/setup/AccountSettingsFragment.java
index 6da58e8..3cdfa4a 100644
--- a/src/com/android/email/activity/setup/AccountSettingsFragment.java
+++ b/src/com/android/email/activity/setup/AccountSettingsFragment.java
@@ -78,6 +78,7 @@ public class AccountSettingsFragment extends PreferenceFragment {
     private static final String PREFERENCE_CATEGORY_DATA_USAGE = "data_usage";
     private static final String PREFERENCE_CATEGORY_NOTIFICATIONS = "account_notifications";
     private static final String PREFERENCE_NOTIFY = "account_notify";
+    private static final String PREFERENCE_NOTIFY_LIGHT = "account_notify_light";
     private static final String PREFERENCE_VIBRATE_WHEN = "account_settings_vibrate_when";
     private static final String PREFERENCE_RINGTONE = "account_ringtone";
     private static final String PREFERENCE_CATEGORY_SERVER = "account_servers";
@@ -101,6 +102,7 @@ public class AccountSettingsFragment extends PreferenceFragment {
     private CheckBoxPreference mAccountBackgroundAttachments;
     private CheckBoxPreference mAccountDefault;
     private CheckBoxPreference mAccountNotify;
+    private CheckBoxPreference mAccountNotifyLight;
     private ListPreference mAccountVibrateWhen;
     private RingtonePreference mAccountRingtone;
     private CheckBoxPreference mSyncContacts;
@@ -493,6 +495,10 @@ public class AccountSettingsFragment extends PreferenceFragment {
         mAccountNotify.setChecked(0 != (mAccount.getFlags() & Account.FLAGS_NOTIFY_NEW_MAIL));
         mAccountNotify.setOnPreferenceChangeListener(mPreferenceChangeListener);
 
+        mAccountNotifyLight = (CheckBoxPreference) findPreference(PREFERENCE_NOTIFY_LIGHT);
+        mAccountNotifyLight.setChecked(0 != (mAccount.getFlags() & Account.FLAGS_NOTIFY_USE_LED));
+        mAccountNotifyLight.setOnPreferenceChangeListener(mPreferenceChangeListener);
+
         mAccountRingtone = (RingtonePreference) findPreference(PREFERENCE_RINGTONE);
         mAccountRingtone.setOnPreferenceChangeListener(mPreferenceChangeListener);
 
@@ -638,7 +644,7 @@ public class AccountSettingsFragment extends PreferenceFragment {
     private void saveSettings() {
         // Turn off all controlled flags - will turn them back on while checking UI elements
         int newFlags = mAccount.getFlags() &
-                ~(Account.FLAGS_NOTIFY_NEW_MAIL |
+                ~(Account.FLAGS_NOTIFY_NEW_MAIL | Account.FLAGS_NOTIFY_USE_LED |
                         Account.FLAGS_VIBRATE_ALWAYS | Account.FLAGS_VIBRATE_WHEN_SILENT |
                         Account.FLAGS_BACKGROUND_ATTACHMENTS);
 
@@ -651,6 +657,7 @@ public class AccountSettingsFragment extends PreferenceFragment {
         mAccount.setSenderName(mAccountName.getText().trim());
         mAccount.setSignature(mAccountSignature.getText());
         newFlags |= mAccountNotify.isChecked() ? Account.FLAGS_NOTIFY_NEW_MAIL : 0;
+        newFlags |= mAccountNotifyLight.isChecked() ? Account.FLAGS_NOTIFY_USE_LED : 0;
         mAccount.setSyncInterval(Integer.parseInt(mCheckFrequency.getValue()));
         if (mSyncWindow != null) {
             mAccount.setSyncLookback(Integer.parseInt(mSyncWindow.getValue()));
-- 
1.7.2.5

